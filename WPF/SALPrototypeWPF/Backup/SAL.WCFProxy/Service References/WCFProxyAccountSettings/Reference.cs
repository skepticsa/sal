//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFProxy.WCFProxyAccountSettings {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountId", Namespace="http://schemas.datacontract.org/2004/07/SAL.WCFServiceHost")]
    [System.SerializableAttribute()]
    public partial class AccountId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClearingIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClearingId {
            get {
                return this.ClearingIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClearingIdField, value) != true)) {
                    this.ClearingIdField = value;
                    this.RaisePropertyChanged("ClearingId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSettings", Namespace="http://schemas.datacontract.org/2004/07/SAL.WCFServiceHost")]
    [System.SerializableAttribute()]
    public partial class AccountSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyingPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFProxy.WCFProxyAccountSettings.AccountId IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuyingPower {
            get {
                return this.BuyingPowerField;
            }
            set {
                if ((this.BuyingPowerField.Equals(value) != true)) {
                    this.BuyingPowerField = value;
                    this.RaisePropertyChanged("BuyingPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFProxy.WCFProxyAccountSettings.AccountId Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFProxyAccountSettings.IAccountSettings")]
    public interface IAccountSettings {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountSettings/GetAccountSettings", ReplyAction="http://tempuri.org/IAccountSettings/GetAccountSettingsResponse")]
        WCFProxy.WCFProxyAccountSettings.AccountSettings GetAccountSettings(WCFProxy.WCFProxyAccountSettings.AccountId id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountSettings/SetAccountBuyingPower", ReplyAction="http://tempuri.org/IAccountSettings/SetAccountBuyingPowerResponse")]
        void SetAccountBuyingPower(WCFProxy.WCFProxyAccountSettings.AccountId id, decimal bp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IAccountSettingsChannel : WCFProxy.WCFProxyAccountSettings.IAccountSettings, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AccountSettingsClient : System.ServiceModel.ClientBase<WCFProxy.WCFProxyAccountSettings.IAccountSettings>, WCFProxy.WCFProxyAccountSettings.IAccountSettings {
        
        public AccountSettingsClient() {
        }
        
        public AccountSettingsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountSettingsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountSettingsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountSettingsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFProxy.WCFProxyAccountSettings.AccountSettings GetAccountSettings(WCFProxy.WCFProxyAccountSettings.AccountId id) {
            return base.Channel.GetAccountSettings(id);
        }
        
        public void SetAccountBuyingPower(WCFProxy.WCFProxyAccountSettings.AccountId id, decimal bp) {
            base.Channel.SetAccountBuyingPower(id, bp);
        }
    }
}
